version: '3.9'

services:
  # services (sqldb, s3, in-memory)
  postgres:
    restart: always
    build: ../postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=kayrosteam
      - POSTGRES_PASSWORD=resto123
      - POSTGRES_DB=main_db
    volumes:
      - ../postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ../postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    tty: true
  redis:
    restart: always
    image: mirror.gcr.io/library/redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    tty: true
  minio:
    restart: always
    image: mirror.gcr.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /etc/letsencrypt/live/resto-go.site/fullchain.pem:/root/.minio/certs/public.crt:ro
      - /etc/letsencrypt/live/resto-go.site/privkey.pem:/root/.minio/certs/private.key:ro
      - ../minio/data:/data
    environment:
      - MINIO_ROOT_USER=kayrosteam
      - MINIO_ROOT_PASSWORD=resto123
      - MINIO_SERVER_URL=https://resto-go.site:9000
      - MINIO_BROWSER_REDIRECT_URL=https://resto-go.site/minio-admin
    hostname: resto-go.site
    command: server --console-address :9001 /data
    tty: true
  # metrics
  node-exporter:
    restart: always
    image: mirror.gcr.io/prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
#      - --collector.filesystem.ignored-mount-points
    ports:
      - "9100:9100"
    tty: true
  prometheus:
    restart: always
    image: mirror.gcr.io/prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - node-exporter
    tty: true
  grafana:
    restart: always
    image: mirror.gcr.io/grafana/grafana
    container_name: grafana
    environment:
      - GF_SERVER_ROOT_URL=https://resto-go.site/grafana
    ports:
      - "3000:3000"
    volumes:
      - ../grafana:/var/lib/grafana
    tty: true
  # gateway and microservices
  rest-grpc:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/rest/Dockerfile
    container_name: rest-grpc
    ports:
      - "8001:8001"
    tty: true
  comment-grpc:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/comment/Dockerfile
    container_name: comment-grpc
    ports:
      - "8003:8003"
    tty: true
  user-grpc:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/user/Dockerfile
    container_name: user-grpc
    ports:
      - "8004:8004"
    tty: true
  session-grpc:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/session/Dockerfile
    container_name: session-grpc
    ports:
      - "8005:8005"
    tty: true
  auth-grpc:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/auth/Dockerfile
    container_name: auth-grpc
    ports:
      - "8002:8002"
    tty: true
    depends_on:
      - user-grpc
      - session-grpc
  gateway:
    restart: always
    build:
      context: ../../
      dockerfile: integration/microservices/gateway/Dockerfile
    container_name: gateway
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - minio
      - rest-grpc
      - user-grpc
      - session-grpc
      - auth-grpc
    tty: true
  nginx:
    restart: always
    image: mirror.gcr.io/library/nginx:latest
    container_name: nginx
    volumes:
      - /etc/letsencrypt/live/resto-go.site/privkey.pem:/root/ssl/key.pem
      - /etc/letsencrypt/live/resto-go.site/fullchain.pem:/root/ssl/cert.pem
      - ../nginx/logs:/var/log/nginx/
      - ../nginx/prod/nginx.conf:/etc/nginx/nginx.conf
      # here you need to place the path of frontend static folder
      - /home/kayros/frontend/dist:/var/www/dist
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - gateway
    extra_hosts:
      - host.docker.internal:host-gateway
    tty: true
