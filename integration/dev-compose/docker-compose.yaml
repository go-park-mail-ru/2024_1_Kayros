version: '3.9'

services:
  # services (sqldb, s3, in-memory)
  postgres:
    image: postgres:16.3
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - ../postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ../postgres/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    tty: true
  redis:
    image: redis:7.4
    container_name: redis
    restart: always    
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    tty: true
  minio:
    image: quay.io/minio/minio:RELEASE.2024-09-13T20-26-02Z-cpuv1
    container_name: minio
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - ../minio/data:/data
    ports:
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
      - ${MINIO_SERVER_PORT}:${MINIO_SERVER_PORT}
    command: server /data --console-address :9001 
    tty: true
  # # metrics
  # node-exporter:
  #   image: prom/node-exporter:v1.8.2
  #   container_name: node-exporter
  #   restart: always
  #   ports:
  #     - ${NODE_EXPORTER_PORT}:${NODE_EXPORTER_PORT}
  #   tty: true
  # prometheus:
  #   restart: always
  #   image: prom/prometheus:v2.54.1
  #   container_name: prometheu
  #   volumes:
  #     - ../prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
  #   depends_on:
  #     - node-exporter
  #   tty: true
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ../grafana/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    tty: true
  # gateway and microservices
  # rest-grpc:
  #   build:
  #     context: ../../
  #     dockerfile: integration/microservices/rest/Dockerfile
  #   container_name: rest-grpc
  #   restart: always
  #   ports:
  #     - ${REST_GRPC_PORT}:${REST_GRPC_PORT}
  #   tty: true
  # comment-grpc:
  #   build:
  #     context: ../../
  #     dockerfile: integration/microservices/comment/Dockerfile
  #   container_name: comment-grpc
  #   restart: always
  #   ports:
  #     - ${COMMENT_GRPC_PORT}:${COMMENT_GRPC_PORT}
  #   tty: true
  # user-grpc:
  #   build:
  #     context: ../../
  #     dockerfile: integration/microservices/user/Dockerfile
  #   container_name: user-grpc
  #   restart: alwayss
  #   ports:
  #     - ${USER_GRPC_PORT}:${USER_GRPC_PORT}
  #   tty: true
  # session-grpc:
  #   build:
  #     context: ../../
  #     dockerfile: integration/microservices/session/Dockerfile
  #   container_name: session-grpc
  #   restart: always
  #   ports:
  #     - ${SESSION_GRPC_PORT}:${SESSION_GRPC_PORT}
  #   tty: true
  # auth-grpc:
  #   build:
  #     context: ../../
  #     dockerfile: integration/microservices/auth/Dockerfile
  #   container_name: auth-grpc
  #   restart: always
  #   ports:
  #     - ${AUTH_GRPC_PORT}:${AUTH_GRPC_PORT}
  #   tty: true
  #   depends_on:
  #     - user-grpc
  #     - session-grpc
  # gateway:
  #   build: 
  #     context: ../../
  #     dockerfile: integration/microservices/gateway/Dockerfile
  #   container_name: gateway
  #   restart: always
  #   ports:
  #     - ${GATEWAY_PORT}:${GATEWAY_PORT}
  #   depends_on:
  #     - redis
  #     - postgres
  #     - minio
  #     - rest-grpc
  #     - user-grpc
  #     - session-grpc
  #     - auth-grpc
  #   tty: true
  nginx:
    image: nginx:1.27.1
    container_name: nginx
    restart: always
    volumes:
      - ../nginx/logs:/var/log/nginx/
      - ../nginx/dev/nginx.conf:/etc/nginx/nginx.conf
      # here you need to place the path of frontend static folder
      - /Users/ivanlobanov/Programming/kayros-frontend/dist:/var/www/dist
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    # depends_on:
    #   - gateway
    tty: true